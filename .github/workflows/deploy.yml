# .github/workflows/deploy.yml
name: CI/CD Pipeline

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.10'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Lint with flake8
        run: |
          pip install flake8
          flake8 . --ignore=E501,F401,W503,E722,F841,E302,F811,E131

      - name: Build Docker image
        run: docker build -t bloggervikash/shagunpe:latest .

      - name: Log in to DockerHub
        run: echo "${{ secrets.DOCKERHUB_TOKEN }}" | docker login -u "${{ secrets.DOCKERHUB_USERNAME }}" --password-stdin

      - name: Push Docker image
        run: docker push bloggervikash/shagunpe:latest

  deploy:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up SSH
        uses: webfactory/ssh-agent@v0.5.3
        with:
          ssh-private-key: ${{ secrets.DO_DROPLET_SSH_KEY }}

      - name: Add DigitalOcean Droplet's SSH key to known_hosts
        run: |
          ssh-keyscan -H ${{ secrets.DO_DROPLET_IP }} >> ~/.ssh/known_hosts

      - name: Deploy to DigitalOcean Droplet
        env:
          DO_DROPLET_IP: ${{ secrets.DO_DROPLET_IP }}
        run: |
          ssh -o StrictHostKeyChecking=no root@${{ env.DO_DROPLET_IP }} << EOF
          docker pull bloggervikash/shagunpe:latest
          docker stop shagunpe || true
          docker rm shagunpe || true
          docker run -d --name shagunpe \
          -p 8000:8000 \
          -e DB_HOST='${{ secrets.DB_HOST }}' \
          -e DB_PORT='${{ secrets.DB_PORT }}' \
          -e DB_USER='${{ secrets.DB_USER }}' \
          -e DB_PASS='${{ secrets.DB_PASS }}' \
          -e DB_NAME='${{ secrets.DB_NAME }}' \
          -e SECRET_KEY='${{ secrets.SECRET_KEY }}' \
          -e ENCRYPTION_KEY='${{ secrets.ENCRYPTION_KEY }}' \
          -e MSG91_AUTH_KEY='${{ secrets.MSG91_AUTH_KEY }}' \
          -e MSG91_TEMPLATE_ID='${{ secrets.MSG91_TEMPLATE_ID }}' \
          -e REDIS_URL='${{ secrets.REDIS_URL }}' \
          bloggervikash/shagunpe:latest
          EOF
